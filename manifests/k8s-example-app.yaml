apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: k8s-example
  namespace: k8s-example
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: k8s-example.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: k8s-example
                port:
                  number: 8000

---
apiVersion: v1
kind: Service
metadata:
  name: k8s-example
  labels:
    app.kubernetes.io/name: k8s-example
  namespace: k8s-example
spec:
  ports:
    - port: 8000
  selector:
    app.kubernetes.io/name: k8s-example

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-example
  labels:
    app.kubernetes.io/name: k8s-example
  namespace: k8s-example
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-example
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-example
    spec:
      containers:
        - name: k8s-example
          image: scarbo/k8s-example:latest
          ports:
            - containerPort: 8000
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8001
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /live
              port: 8001
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            initialDelaySeconds: 1
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 100Mi